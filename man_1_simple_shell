.\" Manpage for simple_shell
.TH SIMPLE_SHELL 1 "HolbertonSchool C#25 2025" "1.0" "User Commands"
.SH NAME
Simple Shell \- A simple UNIX command line interpreter
.SH SYNOPSIS
.B ./prog
.br
.B echo COMMAND | ./prog
.SH DESCRIPTION
Simple Shell is a basic command-line interpreter that allows users to interact with the operating system by typing commands. It supports basic functionality for executingsingle commands.
.TP
The shell does not support pipes, redirections, or semicolons and commands must be typed in full. No support of alias or shortcuts.
.TP
When a user runs the shell, it displays a prompt \fB$HugoAdrien/[CWD]/$\fR and waits for user input. After a command is entered, the shell attempts to execute it by invoking the appropriate program. If the command is not found, an error message is displayed. The prompt reappears after every command execution. The shell also handles the following features:
.SH INSTALLATION
To install the shell: 
.br
1. Clone the repository from GitHub and compile the source code using the following commands:
.br
    \(dqgit clone https://github.com/vlldnt/holbertonschool-simple_shell.git\(dq
.br

2. Compile the source code using the following command:
    \(dqgcc -Wall -Werror -Wextra -pedantic -std=gnu89 *.c -o prog\(dq
.br

3. Run the shell using the following command:
    \(dq./prog\(dq for the interactive mode 
.br
    \(dqecho COMMAND | ./prog\(dq for the non-interactive mode

.SH MANDATORY FEATURES
.br
1. Display prompt \fB$HugoAdrien/[CWD]/$ \fR
.br
2. Wait for user input and process commands.
.br
3. Execute commands using \fBexecve\fR.
.br
4. Display error messages if the command is not found.
.br
5. Handle End-of-File \fBCtrl+D\fR.
.br
6. Handle \fBCTRL+C\fR to prevent the shell from quitting when pressed.
.br
7. Exit the shell cleanly when the \fBexit\fR command is entered.
.SH SIGNALS HANDLING
1. CTRL+D: Ends the input stream and terminates the shell session gracefully. If \fBCTRL+D\fR is pressed, the shell will exit.
.TP
2. CTRL+C: The shell ignores \fBCTRL+C\fR signals to prevent the process from terminating when the user presses \fBCTRL+C\fR. The prompt will remain active for further input.
.SH EXIT STATUS
.br
On success, the shell returns a status code of 0.
.br
On error (e.g., command not found), the shell returns a status code of 2.
.SH EXAMPLES
.br
To execute a command in the shell:
.RS
$ ls
.RE
If a command cannot be found: like 'school'
.RS
$ school : command not found
./simple_shell: No such file or directory
.RE
To exit the shell:
.RS
$ exit
.RE
.SH FILES USED FOR THE PROJECT
Github used for the project: https://github.com/vlldnt/holbertonschool-simple_shell.git
.br

- \fBbuiltin.c\fP Handle the execution of the built in "exit" and "env"
.br
- \fBexecute_command.c\fP Execution the command received from input
.br
- \fBfree_ressources.c\fP Tool to free memory of an array of string
.br
- \fBget_env.c\fP Tool to get an environment variable
.br
- \fBhandle_sigint.c\fP Handle the Signal Interruption (CTRL + C)
.br
- \fBmain.c\fP Contains the main function for our simple_shell
.br
- \fBprompt.c\fP Display the prompt and checking if input is from a terminal
.br
- \fBread_input.c\fP Get and return the input received by the user
.br
- \fBAUTHORS\fP List and details on the authors of the project
.br 
- \fBman_1_simple_shell\fP Man page of the simple_shell  
.br 
- \fBshell.h\fP Header of the project
.br
- \fBREADME.md\fP Description of our project
.br
- \fBsplit_string.c\fP Function that split a string in an array
.SH AUTHOR
Vieilledent Adrien <vieilledent.adrien@gmail.com>
.br
Hugo Bailly <baillyhugo701@gmail.com>
.SH SEE ALSO
man sh
.br
man bash
.SH LICENSE
No special licence, open source project for the Holberton School C#25 -  Toulouse.